
Je te montre les actions faciles qu'il faut nÃ©cessairement exÃ©cuter pour installer Nodejs. Ce sont des actions qui sont documentÃ© sur la page de tÃ©lÃ©chargement officielle de NodeJs.

TÃ©lÃ©chargement nodejs

Tu vas trouver des actions pour tous les systÃ¨mes d'exploitation supportÃ© par Nodejs.

Je reste concentrer sur les actions qui vont te permettre de :

ğŸ”¹TÃ©lÃ©charger et Installer Nodejs sur Windows.

Comment installer NodeJS sur Windows ?
Pour installer Node.js sous Windows, il suffit de se rendre sur la page de tÃ©lÃ©chargement de Node.js et de choisir l'installeur qui est proposÃ© pour windows. Oui, En cliquant simplement sur le lien Install.

Tu as le choix entre tÃ©lÃ©charger soit le .msi, soit le .exe ce qui produira un rÃ©sultat similaire.

Choisi la version 64 bits si tu as un systÃ¨me d'exploitation Windows en versions 64 bits Et 32 Bits pour un Windows 32 bits.

Une fois les Ã©tapes complÃ©tÃ©e avec du suivant-suivant. Ã€ la fin, on te dit que Node.js est installÃ©... Oui, mais oÃ¹ ? Comment Ã§a marche ?

En fait, tu trouveras 2 programmes installÃ©s :

ğŸ”¹Node.js : C'est l'interprÃ©teur de commandes de Node.js (dont nous parlerons Ã  la fin de ce chapitre). Nous l'utiliserons assez peu en pratique. Il sert Ã  tester des commandes JavaScript.
ğŸ”¹Node.js command prompt : C'est une console de Windows configurÃ©e pour reconnaÃ®tre Node.js. C'est par lÃ  que tu passeras pour lancer tes programmes Node.js, c'est donc ce que nous utiliserons le plus souvent.

Comment installer NodeJS sur MacOS ?
Tu as un Mac OS X, tu choisir de cliquer sur le lien "Install" sur la page de tÃ©lÃ©chargement de Node.js qui correspond.

Pour aller vite je te recommande de prendre l'installeur (fichier .pkg).

Il ouvre un assistant d'installation, dans lequel il suffit de suivre la mÃ©thode : "Suivant-Suivant".

Une fois l'installation terminÃ©e, tu as la possibilitÃ© de vÃ©rifier que Node.js fonctionne correctement en tapant la commande node dans la console.

Pour vÃ©rifier, tu ouvres une fenÃªtre de Terminal (le Terminal Ã©tant installÃ© par dÃ©faut sous Mac OS X), en allant dans le Finder, section "Applications", "Terminal". Je te conseille de mettre un raccourci dans le dock !

Fais toi plaisir en testant quelques commandes comme: node -v(pour avoir le numÃ©ro de version) ou node tout court pour lancer l'interprÃ©teur interactif.

Lorsque l'interprÃ©teur est lancÃ©, tu peux taper des commandes JavaScript et obtenir une rÃ©ponse.

Par exemple :

console.log('Bonjour Eurekademie')
ou encore :

1 + 1
Pour quitter l'interprÃ©teur, Tu combines Ctrl + D.

pas de panique ! L'interprÃ©teur de commande nodejs sert ici surtout pour faire des tests.

En pratique, tu va Ã©crire des fichiers .js et demander Ã  Node de les exÃ©cuter.

Comment installer nodeJS sur ubuntu ?
Sous Linux, comme d'habitude, tu as deux choix :

ğŸ”¹La mÃ©thode 100% geek, qui consiste Ã  tÃ©lÃ©charger les sources et Ã  les compiler.
ğŸ”¹La mÃ©thode douce, qui consiste Ã  utiliser le gestionnaire de paquets de sa distribution.
Je suis un fan de la mÃ©thode douce, j'aime bien la console linux parce que c'est rapide . Je n'ai pas problÃ¨me avec la mÃ©thode warrior, c'est une mÃ©thode que j'utilise en cas de rÃ©sistance de la mÃ©thode douce(c'est qui n'arrive que dans trÃ¨s rare occasion).

Toute fois, tu peux retrouver les instructions officielles sur le site de Node.js.

Il te suffit donc de rentrer les commandes suivantes :

Node.js 12 (LTS) :

sudo su
curl -sL https://deb.nodesource.com/setup_12.x | bash -
sudo apt-get install -y nodejs
Node.js 10 (current) :

curl-sL https://deb.nodesource.com/setup_10.x |sudo-Ebash- 
sudo apt install -y nodejs
Et voilÃ  le travail ! Pour vÃ©rifier que Nodejs est bien installÃ©, voici quelques commandes Ã  tapez dans le terminal :

node -v
node
ğŸ”¹La premiÃ¨re affiche le numÃ©ro de version de Node.js que tu as installÃ©.
ğŸ”¹La seconde lance l'interprÃ©teur interactif de Node.js.
Tu peux y taper du code JavaScript par exemple console.log("Installer nodejs"). Pour sortir de l'interprÃ©teur, il suffit de faire Ctrl + D.

Pour les autres distribution, la liste Ã  jour est maintenue sur le site officiel de Node : nodejs package-manager.

Comment fonctionne le gestionnaire de packages nodejs ?
Un gestionnaire de packages pour ton code vas permet d'utiliser et de partager du code avec d'autres dÃ©veloppeurs du monde entier.

Partager le code rapidement, en toute sÃ©curitÃ© et de maniÃ¨re fiable afin que personne n'aie jamais Ã  s'inquiÃ©ter.

Un gestionnaire de packages vous permet d'utiliser les solutions d'autres dÃ©veloppeurs pour diffÃ©rents problÃ¨mes, ce qui te permet de dÃ©velopper plus facilement ton application web.

Si tu as des problÃ¨mes, tu peux signaler des problÃ¨mes ou apporter une contribution, et lorsque le problÃ¨me est rÃ©solu, tu peux utiliser Un gestionnaire de packages pour faire une mise Ã  jour.

Le code est partagÃ© par ce qu'on appelle un package. Un package contient tout le code partagÃ© ainsi qu'un package.json fichier (appelÃ© manifeste ) qui dÃ©crit le package.

Comment fonctionne le gestionnaire de packages Npm ?
Depuis les versions les plus rÃ©centes de Node.js, il faut savoir que NPM est installÃ© en mÃªme temps automatiquement.

NPM est le gestionnaire de paquets de Node.js (c'est un peu l'Ã©quivalent de apt, mais pour les extensions Node.js).

NPM est vraiment un outil incroyable qui va te permettre d'Ã©tendre les possibilitÃ©s de Node.js Ã  l'infini.

En ajoutant des petits ou gros modules documenter et dÃ©velopper par d'autre dÃ©veloppeur pour rÃ©soudre un certains nombre de problÃ¨me rÃ©current.

Voici une petite liste de commande npm : AccÃ©der Ã  la liste des commandes :

npm -l
Commencer un nouveau projet :

npm init
Installation de toutes les dÃ©pendances :

Ajout d'une dÃ©pendance :

npm install [package]
npm install [package]@[version]
npm install [package]@[tag]
Ajout d'une dÃ©pendance Ã  diffÃ©rentes catÃ©gories de dÃ©pendances :

npm install [package] --dev  # dev dependencies
npm install [package] --peer # peer dependencies
npm install [package] --save  # en local
npm install [package] --global # de maniÃ¨re global
Mise Ã  niveau d'une dÃ©pendance :

npm update [package]
npm update  [package]@[version]
npm update  [package]@[tag]
Suppression d'une dÃ©pendance :

npm uninstall [package]
Mise Ã  niveau du fil lui-mÃªme :

npm i npm --global
Comment fonctionne le gestionnaire de pakages Yarn ?
Perso, j'utilise beaucoup yarn, au dÃ©but je voulais juste le testÃ©, avec le temps j'ai compris qu'il y avait tellement Ã  gagner que je suis restÃ© la dessus. Comment yarn m'a t-il convaincu ?

Le marketing voudrait que les dÃ©veloppeurs amateurs ou professionals utilisent yarn sur des projets ponctuels ou de grands monorepos.

Voici leurs slogan marketing : Projets sÃ»rs, stables et reproductibles.

Yarn est un produit dâ€™une collaboration entre plusieurs Ã©quipes dont des dÃ©veloppeurs de chez Facebook et Google.

Ce dernier a Ã©tÃ© dÃ©veloppÃ© dans le but de rÃ©soudre un certain nombre de problÃ¨mes que ses auteurs ont eu Ã  rencontrer en utilisant Npm comme gestionnaire de dÃ©pendance :

ğŸ”¹Npm nâ€™Ã©tait pas assez rapide.
ğŸ”¹Npm prÃ©sentait des problÃ¨mes de cohÃ©rence lors de lâ€™installation des dÃ©pendances sur des machines diffÃ©rentes.
Toute fois il est trÃ¨s important de savoir que :

ğŸ”¹Yarn cosomme les mÃªmes registres que Npm pour tÃ©lÃ©charger les donnÃ©es.
ğŸ”¹Yarn accÃ¨de et manipule le fichier de dÃ©pendances package.json exactement de la mÃªme comme le fait Npm. Ce pourquoi, il est pratiquement possible dâ€™utiliser Yarn au sein dâ€™un projet qui a dÃ©pendances ont toujours Ã©tÃ© installÃ©es avec Npm, que ce soit pour le remplacer complÃ¨tement ou utiliser les deux outils en parallÃ¨le.
Voici les quelques avantages du gestionnaire de package Yarn :

ğŸ”¹Diviser ton projet en sous-composants conservÃ©s dans un rÃ©fÃ©rentiel unique
ğŸ”¹Offrir la garantie qu'une installation qui fonctionne maintenant continuera de fonctionner de la mÃªme maniÃ¨re Ã  l'avenir.
ğŸ”¹Lorsquâ€™une dÃ©pendance est installÃ©e par Yarn, ce dernier gÃ©nÃ¨re un fichier yarn.lock permettant de verrouiller toute les dÃ©pendances sur une version prÃ©cise. GrÃ¢ce Ã  ce lockfile, tous les membres contribuant Ã  un projet possÃ©deront le mÃªme jeu de dÃ©pendances.
ğŸ”¹Yarn offre la possibilitÃ© dâ€™installer un paquet malgrÃ© lâ€™absence de connexion internet, Ã  condition quâ€™il ait dÃ©jÃ  Ã©tÃ© installÃ© sur la machine auparavant.
Voici un petit guide d'utilisation de yarn

AccÃ©der Ã  la liste des commandes :

yarn help
Commencer un nouveau projet :

yarn init
Installation de toutes les dÃ©pendances :

yarn
yarn install
Ajout d'une dÃ©pendance :

yarn add [package]
yarn add [package]@[version]
yarn add [package]@[tag]
Ajout d'une dÃ©pendance Ã  diffÃ©rentes catÃ©gories de dÃ©pendances :

yarn add [package] --dev  # dev dependencies
yarn add [package] --peer # peer dependencies
Mise Ã  niveau d'une dÃ©pendance :

yarn up [package]
yarn up [package]@[version]
yarn up [package]@[tag]

Suppression d'une dÃ©pendance :

yarn remove [package]
Mise Ã  niveau du fil lui-mÃªme :

yarn set version 2.0.0
yarn set version from sources
Conclusion
Je viens de te montrer les meilleurs techniques pour installer nodejs sur windows, mac os et Ubuntu.

 By tcotidiane ... thanks 3w.trakode.com
